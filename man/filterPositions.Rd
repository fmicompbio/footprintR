% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filterPositions.R
\name{filterPositions}
\alias{filterPositions}
\title{Filter positions}
\usage{
filterPositions(
  se,
  filters = c("sequence.context", "coverage", "all.na"),
  sequence.context = NULL,
  assay.type.cov = "Nvalid",
  min.cov = 1,
  min.nbr.samples = NULL,
  assay.type.ambig = "Nvalid",
  assay.type.na = "mod_prob"
)
}
\arguments{
\item{se}{A \code{SummarizedExperiment} object.}

\item{filters}{A character vector. All values must be one of
\code{"sequence.context"}, \code{"coverage"}, \code{"repeated.positions"}
and \code{"all.na"}. Filters are applied in the order specified by
this vector.}

\item{sequence.context}{A character vector with sequence contexts to
retain. To apply this filter, the \code{"sequence.context"} column must
be present in \code{rowData(se)} (see \code{addSeqContext}).}

\item{assay.type.cov}{A character scalar indicating the assay to use to
define the coverage. If this is a read-level assay, coverage is first
calculated using \code{addReadsSummary(..., statistics = "Nvalid")}.}

\item{min.cov}{A numeric scalar indicating the lowest acceptable
coverage in order to keep a position.}

\item{min.nbr.samples}{A numeric scalar, or \code{NULL}. If \code{NULL}
(default), the row sum of \code{assay.type.cov} (i.e., the total
coverage across all samples) is used for the coverage filtering. If
not \code{NULL}, a position is required to have at least \code{min.cov}
coverage in at least \code{min.nbr.samples} to be retained.}

\item{assay.type.ambig}{A character scalar indicating the assay to use to
decide which row to retain if multiple rows represent the same
genomic position (on different strands). The row with the largest row
sum in this assay is retained.}

\item{assay.type.na}{A character scalar indicating the assay to use as the
basis for filtering out positions with NA values across all reads.
This should be a read level assay.}
}
\value{
A filtered \code{SummarizedExperiment}.
}
\description{
Filter positions based on any combination of sequence context,
coverage, repetition of the same position, and presence of non-NA values.
Filters are applied in the order they are specified to the \code{filters}
argument. Any filter type can be repeated an arbitrary number of times.
}
\examples{
modbamfiles <- system.file("extdata", c("6mA_1_10reads.bam", "6mA_2_10reads.bam"),
                           package = "footprintR")
reffile <- system.file("extdata", "reference.fa.gz", package = "footprintR")

se <- readModBam(bamfiles = modbamfiles, regions = "chr1:6920000-6940000",
                 modbase = "a", verbose = FALSE)
se <- addReadsSummary(se)
se <- addSeqContext(se, sequence.context.width = 3, sequence.reference = reffile)
sefilt <- filterPositions(se, c("sequence.context", "coverage", "all.na"),
                          min.cov = 5, sequence.context = "TAG")
}
\author{
Charlotte Soneson
}
